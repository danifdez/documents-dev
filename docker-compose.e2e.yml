services:
  database-e2e:
    image: postgres:17.6
    container_name: database-e2e
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: documents_e2e
    ports:
      - "5433:5432"

  qdrant-e2e:
    image: qdrant/qdrant:v1.14.1
    container_name: qdrant-e2e
    ports:
      - "6334:6333"

  backend-e2e:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-e2e
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres-e2e
    env_file:
      - .env
    user: "${UID}:${GID}"
    depends_on:
      - postgres-e2e
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 3s
      retries: 10

  models-e2e:
    build:
      context: ./models
      dockerfile: Dockerfile
    container_name: models-e2e
    environment:
      POSTGRES_HOST: postgres-e2e
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: documents_e2e
      QDRANT_HOST: qdrant-e2e
      QDRANT_PORT: 6333
    env_file:
      - .env
    depends_on:
      - postgres-e2e
      - qdrant-e2e

  frontend-e2e:
    build:
      context: ./frontend
      dockerfile: tests/Dockerfile
    container_name: frontend-2e2e
    volumes:
      - ./frontend:/app
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    ipc: host
    environment:
      - MODE=testing
    user: "${UID}:${GID}"
    depends_on:
      backend-e2e:
        condition: service_healthy
